# 0 "drivers/pit.cpp"
# 0 "<built-in>"
# 0 "<command-line>"
# 1 "drivers/pit.cpp"



# 1 "drivers/pit.hpp" 1

       
# 14 "drivers/pit.hpp"
typedef void (*TI)(void);


void pit_initialize(int frequency);
void pit_irq(void);
void set_interval_size(int how_many_ticks);
int get_ticks(void);
void set_timer_irq(TI custom_irq);
void set_kbd_interval(int wait_ms);
# 5 "drivers/pit.cpp" 2
# 1 "drivers/interrupts.hpp" 1

       

# 1 "/opt/cross/lib/gcc/i686-elf/11.2.0/include/stdint.h" 1 3 4
# 11 "/opt/cross/lib/gcc/i686-elf/11.2.0/include/stdint.h" 3 4
# 1 "/opt/cross/lib/gcc/i686-elf/11.2.0/include/stdint-gcc.h" 1 3 4
# 34 "/opt/cross/lib/gcc/i686-elf/11.2.0/include/stdint-gcc.h" 3 4

# 34 "/opt/cross/lib/gcc/i686-elf/11.2.0/include/stdint-gcc.h" 3 4
typedef signed char int8_t;


typedef short int int16_t;


typedef long int int32_t;


typedef long long int int64_t;


typedef unsigned char uint8_t;


typedef short unsigned int uint16_t;


typedef long unsigned int uint32_t;


typedef long long unsigned int uint64_t;




typedef signed char int_least8_t;
typedef short int int_least16_t;
typedef long int int_least32_t;
typedef long long int int_least64_t;
typedef unsigned char uint_least8_t;
typedef short unsigned int uint_least16_t;
typedef long unsigned int uint_least32_t;
typedef long long unsigned int uint_least64_t;



typedef int int_fast8_t;
typedef int int_fast16_t;
typedef int int_fast32_t;
typedef long long int int_fast64_t;
typedef unsigned int uint_fast8_t;
typedef unsigned int uint_fast16_t;
typedef unsigned int uint_fast32_t;
typedef long long unsigned int uint_fast64_t;




typedef long int intptr_t;


typedef long unsigned int uintptr_t;




typedef long long int intmax_t;
typedef long long unsigned int uintmax_t;
# 12 "/opt/cross/lib/gcc/i686-elf/11.2.0/include/stdint.h" 2 3 4
# 5 "drivers/interrupts.hpp" 2
# 1 "/opt/cross/lib/gcc/i686-elf/11.2.0/include/stddef.h" 1 3 4
# 143 "/opt/cross/lib/gcc/i686-elf/11.2.0/include/stddef.h" 3 4
typedef long int ptrdiff_t;
# 209 "/opt/cross/lib/gcc/i686-elf/11.2.0/include/stddef.h" 3 4
typedef long unsigned int size_t;
# 415 "/opt/cross/lib/gcc/i686-elf/11.2.0/include/stddef.h" 3 4
typedef struct {
  long long __max_align_ll __attribute__((__aligned__(__alignof__(long long))));
  long double __max_align_ld __attribute__((__aligned__(__alignof__(long double))));






  __float128 __max_align_f128 __attribute__((__aligned__(__alignof(__float128))));

} max_align_t;






  typedef decltype(nullptr) nullptr_t;
# 6 "drivers/interrupts.hpp" 2
# 14 "drivers/interrupts.hpp"

# 14 "drivers/interrupts.hpp"
struct idt_descriptor {
 uint16_t base_low;
 uint16_t selector;
 uint8_t reserved;
 uint8_t flags;
 uint16_t base_high;
} __attribute__((packed));

struct idtr {
 uint16_t limit;
 uint32_t base;
} __attribute__((packed));


typedef struct idt_descriptor idt_desc;
typedef struct idtr idtr;
typedef void(*IRQ_HNDLR)(void);


void default_handler(void);
void idt_install(void);
void generate_interrupt(void);
int install_ir_handler(uint32_t i, uint8_t flags, uint16_t selector, IRQ_HNDLR irq);
int idt_init(uint16_t code_selector);
void default_handler(void);
void end_of_interrupt(void);
# 6 "drivers/pit.cpp" 2
# 1 "drivers/utils.hpp" 1
       

constexpr auto RAND_MAX = 32767;


void mem_cpy(char * src, char * dest, int num_of_bytes);
int strlen(const char * str);
void base_convert(int num, int base);
void print_number(int num, int base);
void print_n(int num);
void print(char * str);
void print_c(char ch);
int rand(void);
void srand(unsigned int seed);
void sleep(unsigned int ms);
void halt(void);
# 7 "drivers/pit.cpp" 2
# 1 "drivers/../kernel/low_level_io.hpp" 1
       

unsigned char port_byte_in(unsigned short port);
void port_byte_out(unsigned short port, unsigned char data);
unsigned short port_word_in(unsigned short port);
void port_word_out(unsigned short port, unsigned short data);
# 8 "drivers/pit.cpp" 2


TI irq_f;
int ticks = 0;




int interval = 0;
int interval_size = 0;


void pit_initialize(int frequency)
{


 uint16_t freq = 1193182 / frequency;


 install_ir_handler(0x20, 0x8E, 0x8, (IRQ_HNDLR)pit_irq);


 port_byte_out(0x43, 0x36);
 port_byte_out(0x40, (freq & 0xFF));
 port_byte_out(0x40, ((freq >> 8) & 0xFF));
}

void pit_irq(void)
{



 __asm__("pusha");


 ++ticks;


 if (interval_size == ticks)
 {
  ++interval;
  ticks = 0;
 }

 end_of_interrupt();
 __asm__("popa");
 __asm__("leave");
 __asm__("iret");
}

void set_interval_size(int how_many_ticks)
{



 interval_size = how_many_ticks;
 interval = 0;
 ticks = 0;
}

int get_ticks(void)
{

 return ticks;
}

void set_timer_irq(TI custom_irq)
{

 irq_f = custom_irq;
}
